#
# Licensed to Diennea S.r.l. under one
# or more contributor license agreements. See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership. Diennea S.r.l. licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: bkvm-server
  labels:
    {{ toYaml .Values.server.labels | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: bkvm-server
      app.kubernetes.io/instance: bkvm
      app.kubernetes.io/release: bkvm
  template:
    metadata:
      labels:
        app.kubernetes.io/name: bkvm-server
        app.kubernetes.io/instance: bkvm
        app.kubernetes.io/release: bkvm
    spec:
      serviceAccountName: {{ .Values.server.serviceAccount.name }}
      containers:
      - env:
        - name: BKVM_jdbc.url
          value: {{ .Values.server.jdbcUrl }}
        - name: BKVM_metadataServiceUri
          value: {{ .Values.server.metadataServiceUri }}
        {{- toYaml .Values.server.env | nindent 8 }}
        image: "{{ .Values.server.image.repository }}:{{ .Values.server.image.tag }}"
        imagePullPolicy: {{ .Values.server.image.imagePullPolicy }}
        name: bkvm-ui
        ports:
        - containerPort: {{ .Values.server.service.port }}
          protocol: {{ .Values.server.service.protocol }}
        resources:
          requests:
            cpu: {{ .Values.server.resources.requests.cpu }}
            memory: {{ .Values.server.resources.requests.memory }}
          limits:
            cpu: {{ .Values.server.resources.limits.cpu }}
            memory: {{ .Values.server.resources.limits.memory }}
{{- if .Values.server.probe.enabled }}
        livenessProbe:
          tcpSocket:
            port: {{ .Values.server.service.port }}
          initialDelaySeconds: {{ .Values.server.probe.initial }}
          periodSeconds: {{ .Values.server.probe.period }}
          timeoutSeconds: {{ .Values.server.probe.timeout }}
        readinessProbe:
          tcpSocket:
            port: {{ .Values.server.service.port }}
          initialDelaySeconds: {{ .Values.server.probe.initial }}
          periodSeconds: {{ .Values.server.probe.period }}
          timeoutSeconds: {{ .Values.server.probe.timeout }}
{{- end }}